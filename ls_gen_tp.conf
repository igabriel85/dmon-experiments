input {
  generator {
    # Emit all lines 3 times.
        lines =>[
            "1489664544374 mapred.ShuffleMetrics: Context=mapred, Hostname=dice.cdh.slave3, ShuffleOutputBytes=98191, ShuffleOutputsFailed=0, ShuffleOutputsOK=751, ShuffleConnections=2107",
            "1489664200632 dfs.namenode: ProcessName=NameNode, SessionId=null, Context=dfs, Hostname=expcluster-1, CreateFileOps=19660, FilesCreated=20155, FilesAppended=0, GetBlockLocations=36585, FilesRenamed=495, GetListingOps=7381, DeleteFileOps=1580, FilesDeleted=1580, FileInfoOps=39883, AddBlockOps=19495, GetAdditionalDatanodeOps=0, CreateSymlinkOps=0, GetLinkTargetOps=0, FilesInGetListingOps=24549, AllowSnapshotOps=0, DisallowSnapshotOps=0, CreateSnapshotOps=0, DeleteSnapshotOps=0, RenameSnapshotOps=0, ListSnapshottableDirOps=0, SnapshotDiffReportOps=0, BlockReceivedAndDeletedOps=58870, StorageBlockReportOps=20, TransactionsNumOps=101086, TransactionsAvgTime=0.0, SyncsNumOps=62029, SyncsAvgTime=2.0, TransactionsBatchedInSync=8495, BlockReportNumOps=20, BlockReportAvgTime=8.0, CacheReportNumOps=29060, CacheReportAvgTime=0.0, SafeModeTime=42542, FsImageLoadTime=2547, GetEditNumOps=25, GetEditAvgTime=45.0, GetImageNumOps=1, GetImageAvgTime=291.0, PutImageNumOps=25, PutImageAvgTime=15.0, TotalFileOps=125079",
            "1489663974374 jvm.JvmMetrics: Context=jvm, ProcessName=NodeManager, SessionId=null, Hostname=dice.cdh.slave3, MemNonHeapUsedM=93.249664, MemNonHeapCommittedM=94.90625, MemNonHeapMaxM=-1.0, MemHeapUsedM=91.30191, MemHeapCommittedM=790.75, MemHeapMaxM=790.75, MemMaxM=790.75, GcCountParNew=278, GcTimeMillisParNew=3922, GcCountConcurrentMarkSweep=2, GcTimeMillisConcurrentMarkSweep=134, GcCount=280, GcTimeMillis=4056, ThreadsNew=0, ThreadsRunnable=23, ThreadsBlocked=0, ThreadsWaiting=74, ThreadsTimedWaiting=38, ThreadsTerminated=0, LogFatal=0, LogError=0, LogWarn=0, LogInfo=0"
        ]
    #threads => 4
    type => "l_test"
  }

 generator {
        lines => [
	        "1491590295703 rpcdetailed.rpcdetailed: port=50020, Context=rpcdetailed, Hostname=dice.cdh.slave1",
            "1491590295703 jvm.JvmMetrics: Context=jvm, ProcessName=DataNode, SessionId=null, Hostname=dice.cdh.slave1, MemNonHeapUsedM=64.54314, MemNonHeapCommittedM=66.83203, MemNonHeapMaxM=-1.0, MemHeapUsedM=228.37553, MemHeapCommittedM=790.75, MemHeapMaxM=790.75, MemMaxM=790.75, GcCountParNew=376, GcTimeMillisParNew=3992, GcCountConcurrentMarkSweep=1, GcTimeMillisConcurrentMarkSweep=57, GcCount=377, GcTimeMillis=4049, GcNumWarnThresholdExceeded=0, GcNumInfoThresholdExceeded=0, GcTotalExtraSleepTime=17455, ThreadsNew=0, ThreadsRunnable=18, ThreadsBlocked=0, ThreadsWaiting=12, ThreadsTimedWaiting=19, ThreadsTerminated=0, LogFatal=0, LogError=14, LogWarn=878, LogInfo=227094",
            "1491590295704 dfs.datanode: SessionId=null, Context=dfs, Hostname=dice.cdh.slave1, BytesWritten=423435954, TotalWriteTime=4230, BytesRead=363604171, TotalReadTime=12755, BlocksWritten=45616, BlocksRead=43027, BlocksReplicated=88, BlocksRemoved=45098, BlocksVerified=0, BlockVerificationFailures=0, BlocksCached=0, BlocksUncached=0, ReadsFromLocalClient=40763, ReadsFromRemoteClient=2264, WritesFromLocalClient=33400, WritesFromRemoteClient=12088, BlocksGetLocalPathInfo=0, RemoteBytesRead=161436426, RemoteBytesWritten=282318763, RamDiskBlocksWrite=0, RamDiskBlocksWriteFallback=0, RamDiskBytesWrite=0, RamDiskBlocksReadHits=0, RamDiskBlocksEvicted=0, RamDiskBlocksEvictedWithoutRead=0, RamDiskBlocksEvictionWindowMsNumOps=0, RamDiskBlocksEvictionWindowMsAvgTime=0.0, RamDiskBlocksLazyPersisted=0, RamDiskBlocksDeletedBeforeLazyPersisted=0, RamDiskBytesLazyPersisted=0, RamDiskBlocksLazyPersistWindowMsNumOps=0, RamDiskBlocksLazyPersistWindowMsAvgTime=0.0, FsyncCount=0, VolumeFailures=0, DatanodeNetworkErrors=2613, ReadBlockOpNumOps=43027, ReadBlockOpAvgTime=1.0, WriteBlockOpNumOps=45488, WriteBlockOpAvgTime=17.0, BlockChecksumOpNumOps=0, BlockChecksumOpAvgTime=0.0, CopyBlockOpNumOps=0, CopyBlockOpAvgTime=0.0, ReplaceBlockOpNumOps=0, ReplaceBlockOpAvgTime=0.0, HeartbeatsNumOps=670966, HeartbeatsAvgTime=2.0, BlockReportsNumOps=94, BlockReportsAvgTime=3.0, IncrementalBlockReportsNumOps=45872, IncrementalBlockReportsAvgTime=2.0, CacheReportsNumOps=167843, CacheReportsAvgTime=2.0, PacketAckRoundTripTimeNanosNumOps=93970, PacketAckRoundTripTimeNanosAvgTime=1112819.5, FlushNanosNumOps=122771, FlushNanosAvgTime=5860.0, FsyncNanosNumOps=0, FsyncNanosAvgTime=0.0, SendDataPacketBlockedOnNetworkNanosNumOps=90284, SendDataPacketBlockedOnNetworkNanosAvgTime=10190.0, SendDataPacketTransferNanosNumOps=90284, SendDataPacketTransferNanosAvgTime=13666.5",
            "1491590295704 metricssystem.MetricsSystem: Context=metricssystem, Hostname=dice.cdh.slave1, NumActiveSources=5, NumAllSources=5, NumActiveSinks=1, NumAllSinks=0, Sink_diceNumOps=201307, Sink_diceAvgTime=0.0, Sink_diceDropped=0, Sink_diceQsize=0, SnapshotNumOps=1207847, SnapshotAvgTime=0.2, PublishNumOps=201307, PublishAvgTime=0.0, DroppedPubAll=0",
            "1491590305703 ugi.UgiMetrics: Context=ugi, Hostname=dice.cdh.slave1, LoginSuccessNumOps=0, LoginSuccessAvgTime=0.0, LoginFailureNumOps=0, LoginFailureAvgTime=0.0, GetGroupsNumOps=0, GetGroupsAvgTime=0.0",
            "1491590305703 rpc.rpc: port=50020, Context=rpc, Hostname=dice.cdh.slave1, ReceivedBytes=0, SentBytes=0, RpcQueueTimeNumOps=0, RpcQueueTimeAvgTime=0.0, RpcProcessingTimeNumOps=0, RpcProcessingTimeAvgTime=0.0, RpcAuthenticationFailures=0, RpcAuthenticationSuccesses=0, RpcAuthorizationFailures=0, RpcAuthorizationSuccesses=0, RpcClientBackoff=0, NumOpenConnections=0, CallQueueLength=0"
        ]
    type => "l_test2"
    }
}

filter{
    if [type]=="l_test"{ #same as set in logstash-forwarder configuration json
        grok{
            break_on_match => false
            #metricssystem.MetricsSystem
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll:float}"]

            #ugi.UgiMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]


            #jvm.JvmMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{DATA:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

            #yarn.NodeManagerMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ContainersLaunched=%{NUMBER:ContainersLaunched:float}, ContainersCompleted=%{NUMBER:ContainersCompleted:float}, ContainersFailed=%{NUMBER:ContainersFailed:float}, ContainersKilled=%{NUMBER:ContainersKilled:float}, ContainersIniting=%{NUMBER:ContainersIniting:float}, ContainersRunning=%{NUMBER:ContainersRunning:float}, AllocatedGB=%{NUMBER:AllocatedGB:float}, AllocatedContainers=%{NUMBER:AllocatedContainers:float}, AvailableGB=%{NUMBER:AvailableGB:float}, AllocatedVCores=%{NUMBER:AllocatedVCores:float}, AvailableVCores=%{NUMBER:AvailableVCores:float}, ContainerLaunchDurationNumOps=%{NUMBER:ContainerLaunchDurationNumOps:float}, ContainerLaunchDurationAvgTime=%{NUMBER:ContainerLaunchDurationAvgTime:float}"]

            #mapred.ShuffleMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ShuffleOutputBytes=%{NUMBER:ShuffleOutputBytes:float}, ShuffleOutputsFailed=%{NUMBER:ShuffleOutputsFailed:float}, ShuffleOutputsOK=%{NUMBER:ShuffleOutputsOK:float}, ShuffleConnections=%{NUMBER:ShuffleConnections:float}"]

            #rpc.rpc
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

            #rpcdetailed.rpcdetailed
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}"]
        }
    }

    if [type] == "l_test"{
	    metrics{
	        timer => ["events","%{duration}"]
	        add_tag => "metric"
	    }
    }

    if [type]=="ls_test2"{
        grok{
            break_on_match => false
            #metricssystem.MetricsSystem
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, NumActiveSources=%{NUMBER:NumActiveSources:float}, NumAllSources=%{NUMBER:NumAllSources:float}, NumActiveSinks=%{NUMBER:NumActiveSinks:float}, NumAllSinks=%{NUMBER:NumAllSinks:float}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:float}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:float}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:float}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:float}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:float}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

            #ugi.UgiMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:float}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:float}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:float}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

            #jvm.JvmMetrics
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{HOSTNAME:hostname}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:float}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:float}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, GcNumWarnThresholdExceeded=%{NUMBER:GcNumWarnThresholdExceeded:float}, GcNumInfoThresholdExceeded=%{NUMBER:GcNumInfoThresholdExceeded:float}, GcTotalExtraSleepTime=%{NUMBER:GcTotalExtraSleepTime:float}, ThreadsNew=%{NUMBER:ThreadsNew:float}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:float}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:float}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:float}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:float}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:float}, LogFatal=%{NUMBER:LogFatal:float}, LogError=%{NUMBER:LogError:float}, LogWarn=%{NUMBER:LogWarn:float}, LogInfo=%{NUMBER:LogInfo:float}"]

            #dfs.datanode
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, BytesWritten=%{NUMBER:BytesWritten:float}, BytesRead=%{NUMBER:BytesRead:float}, BlocksWritten=%{NUMBER:BlocksWritten:float}, BlocksRead=%{NUMBER:BlocksRead:float}, BlocksReplicated=%{NUMBER:BlocksReplicated:float}, BlocksRemoved=%{NUMBER:BlocksRemoved:float}, BlocksVerified=%{NUMBER:BlocksVerified:float}, BlockVerificationFailures=%{NUMBER:BlockVerificationFailures:float}, BlocksCached=%{NUMBER:BlocksCached:float}, BlocksUncached=%{NUMBER:BlocksUncached:float}, ReadsFromLocalClient=%{NUMBER:ReadsFromLocalClient:float}, ReadsFromRemoteClient=%{NUMBER:ReadsFromRemoteClient:float}, WritesFromLocalClient=%{NUMBER:WritesFromLocalClient:float}, WritesFromRemoteClient=%{NUMBER:WritesFromRemoteClient:float}, BlocksGetLocalPathInfo=%{NUMBER:BlocksGetLocalPathInfo:float}, RamDiskBlocksWrite=%{NUMBER:RamDiskBlocksWrite:float}, RamDiskBlocksWriteFallback=%{NUMBER:RamDiskBlocksWriteFallback:float}, RamDiskBytesWrite=%{NUMBER:RamDiskBytesWrite:float}, RamDiskBlocksReadHits=%{NUMBER:RamDiskBlocksReadHits:float}, RamDiskBlocksEvicted=%{NUMBER:RamDiskBlocksEvicted:float}, RamDiskBlocksEvictedWithoutRead=%{NUMBER:RamDiskBlocksEvictedWithoutRead:float}, RamDiskBlocksEvictionWindowMsNumOps=%{NUMBER:RamDiskBlocksEvictionWindowMsNumOps:float}, RamDiskBlocksEvictionWindowMsAvgTime=%{NUMBER:RamDiskBlocksEvictionWindowMsAvgTime:float}, RamDiskBlocksLazyPersisted=%{NUMBER:RamDiskBlocksLazyPersisted:float}, RamDiskBlocksDeletedBeforeLazyPersisted=%{NUMBER:RamDiskBlocksDeletedBeforeLazyPersisted:float}, RamDiskBytesLazyPersisted=%{NUMBER:RamDiskBytesLazyPersisted:float}, RamDiskBlocksLazyPersistWindowMsNumOps=%{NUMBER:RamDiskBlocksLazyPersistWindowMsNumOps:float}, RamDiskBlocksLazyPersistWindowMsAvgTime=%{NUMBER:RamDiskBlocksLazyPersistWindowMsAvgTime:float}, FsyncCount=%{NUMBER:FsyncCount:float}, VolumeFailures=%{NUMBER:VolumeFailures:float}, DatanodeNetworkErrors=%{NUMBER:DatanodeNetworkErrors:float}, ReadBlockOpNumOps=%{NUMBER:ReadBlockOpNumOps:float}, ReadBlockOpAvgTime=%{NUMBER:ReadBlockOpAvgTime:float}, WriteBlockOpNumOps=%{NUMBER:WriteBlockOpNumOps:float}, WriteBlockOpAvgTime=%{NUMBER:WriteBlockOpAvgTime:float}, BlockChecksumOpNumOps=%{NUMBER:BlockChecksumOpNumOps:float}, BlockChecksumOpAvgTime=%{NUMBER:BlockChecksumOpAvgTime:float}, CopyBlockOpNumOps=%{NUMBER:CopyBlockOpNumOps:float}, CopyBlockOpAvgTime=%{NUMBER:CopyBlockOpAvgTime:float}, ReplaceBlockOpNumOps=%{NUMBER:ReplaceBlockOpNumOps:float}, ReplaceBlockOpAvgTime=%{NUMBER:ReplaceBlockOpAvgTime:float}, HeartbeatsNumOps=%{NUMBER:HeartbeatsNumOps:float}, HeartbeatsAvgTime=%{NUMBER:HeartbeatsAvgTime:float}, BlockReportsNumOps=%{NUMBER:BlockReportsNumOps:float}, BlockReportsAvgTime=%{NUMBER:BlockReportsAvgTime:float}, CacheReportsNumOps=%{NUMBER:CacheReportsNumOps:float}, CacheReportsAvgTime=%{NUMBER:CacheReportsAvgTime:float}, PacketAckRoundTripTimeNanosNumOps=%{NUMBER:PacketAckRoundTripTimeNanosNumOps:float}, PacketAckRoundTripTimeNanosAvgTime=%{NUMBER:PacketAckRoundTripTimeNanosAvgTime:float}, FlushNanosNumOps=%{NUMBER:FlushNanosNumOps:float}, FlushNanosAvgTime=%{NUMBER:FlushNanosAvgTime:float}, FsyncNanosNumOps=%{NUMBER:FsyncNanosNumOps:float}, FsyncNanosAvgTime=%{NUMBER:FsyncNanosAvgTime:float}, SendDataPacketBlockedOnNetworkNanosNumOps=%{NUMBER:SendDataPacketBlockedOnNetworkNanosNumOps:float}, SendDataPacketBlockedOnNetworkNanosAvgTime=%{NUMBER:SendDataPacketBlockedOnNetworkNanosAvgTime:float}, SendDataPacketTransferNanosNumOps=%{NUMBER:SendDataPacketTransferNanosNumOps:float}, SendDataPacketTransferNanosAvgTime=%{NUMBER:SendDataPacketTransferNanosAvgTime:float}"]

            #dfs.datanode(bis)
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, BytesWritten=%{NUMBER:BytesWritten:float}, TotalWriteTime=%{NUMBER:TotalWriteTime:float}, BytesRead=%{NUMBER:BytesRead:float}, TotalReadTime=%{NUMBER:TotalReadTime:float}, BlocksWritten=%{NUMBER:BlocksWritten:float}, BlocksRead=%{NUMBER:BlocksRead:float}, BlocksReplicated=%{NUMBER:BlocksReplicated:float}, BlocksRemoved=%{NUMBER:BlocksRemoved:float}, BlocksVerified=%{NUMBER:BlocksVerified:float}, BlockVerificationFailures=%{NUMBER:BlockVerificationFailures:float}, BlocksCached=%{NUMBER:BlocksCached:float}, BlocksUncached=%{NUMBER:BlocksUncached:float}, ReadsFromLocalClient=%{NUMBER:ReadsFromLocalClient:float}, ReadsFromRemoteClient=%{NUMBER:ReadsFromRemoteClient:float}, WritesFromLocalClient=%{NUMBER:WritesFromLocalClient:float}, WritesFromRemoteClient=%{NUMBER:WritesFromRemoteClient:float}, BlocksGetLocalPathInfo=%{NUMBER:BlocksGetLocalPathInfo:float}, RemoteBytesRead=%{NUMBER:RemoteBytesRead:float}, RemoteBytesWritten=%{NUMBER:RemoteBytesWritten:float}, RamDiskBlocksWrite=%{NUMBER:RamDiskBlocksWrite:float}, RamDiskBlocksWriteFallback=%{NUMBER:RamDiskBlocksWriteFallback:float}, RamDiskBytesWrite=%{NUMBER:RamDiskBytesWrite:float}, RamDiskBlocksReadHits=%{NUMBER:RamDiskBlocksReadHits:float}, RamDiskBlocksEvicted=%{NUMBER:RamDiskBlocksEvicted:float}, RamDiskBlocksEvictedWithoutRead=%{NUMBER:RamDiskBlocksEvictedWithoutRead:float}, RamDiskBlocksEvictionWindowMsNumOps=%{NUMBER:RamDiskBlocksEvictionWindowMsNumOps:float}, RamDiskBlocksEvictionWindowMsAvgTime=%{NUMBER:RamDiskBlocksEvictionWindowMsAvgTime:float}, RamDiskBlocksLazyPersisted=%{NUMBER:RamDiskBlocksLazyPersisted:float}, RamDiskBlocksDeletedBeforeLazyPersisted=%{NUMBER:RamDiskBlocksDeletedBeforeLazyPersisted:float}, RamDiskBytesLazyPersisted=%{NUMBER:RamDiskBytesLazyPersisted:float}, RamDiskBlocksLazyPersistWindowMsNumOps=%{NUMBER:RamDiskBlocksLazyPersistWindowMsNumOps:float}, RamDiskBlocksLazyPersistWindowMsAvgTime=%{NUMBER:RamDiskBlocksLazyPersistWindowMsAvgTime:float}, FsyncCount=%{NUMBER:FsyncCount:float}, VolumeFailures=%{NUMBER:VolumeFailures:float}, DatanodeNetworkErrors=%{NUMBER:DatanodeNetworkErrors:float}, ReadBlockOpNumOps=%{NUMBER:ReadBlockOpNumOps:float}, ReadBlockOpAvgTime=%{NUMBER:ReadBlockOpAvgTime:float}, WriteBlockOpNumOps=%{NUMBER:WriteBlockOpNumOps:float}, WriteBlockOpAvgTime=%{NUMBER:WriteBlockOpAvgTime:float}, BlockChecksumOpNumOps=%{NUMBER:BlockChecksumOpNumOps:float}, BlockChecksumOpAvgTime=%{NUMBER:BlockChecksumOpAvgTime:float}, CopyBlockOpNumOps=%{NUMBER:CopyBlockOpNumOps:float}, CopyBlockOpAvgTime=%{NUMBER:CopyBlockOpAvgTime:float}, ReplaceBlockOpNumOps=%{NUMBER:ReplaceBlockOpNumOps:float}, ReplaceBlockOpAvgTime=%{NUMBER:ReplaceBlockOpAvgTime:float}, HeartbeatsNumOps=%{NUMBER:HeartbeatsNumOps:float}, HeartbeatsAvgTime=%{NUMBER:HeartbeatsAvgTime:float}, BlockReportsNumOps=%{NUMBER:BlockReportsNumOps:float}, BlockReportsAvgTime=%{NUMBER:BlockReportsAvgTime:float}, IncrementalBlockReportsNumOps=%{NUMBER:IncrementalBlockReportsNumOps:float}, IncrementalBlockReportsAvgTime=%{NUMBER:IncrementalBlockReportsAvgTime:float}, CacheReportsNumOps=%{NUMBER:CacheReportsNumOps:float}, CacheReportsAvgTime=%{NUMBER:CacheReportsAvgTime:float}, PacketAckRoundTripTimeNanosNumOps=%{NUMBER:PacketAckRoundTripTimeNanosNumOps:float}, PacketAckRoundTripTimeNanosAvgTime=%{NUMBER:PacketAckRoundTripTimeNanosAvgTime:float}, FlushNanosNumOps=%{NUMBER:FlushNanosNumOps:float}, FlushNanosAvgTime=%{NUMBER:FlushNanosAvgTime:float}, FsyncNanosNumOps=%{NUMBER:FsyncNanosNumOps:float}, FsyncNanosAvgTime=%{NUMBER:FsyncNanosAvgTime:float}, SendDataPacketBlockedOnNetworkNanosNumOps=%{NUMBER:SendDataPacketBlockedOnNetworkNanosNumOps:float}, SendDataPacketBlockedOnNetworkNanosAvgTime=%{NUMBER:SendDataPacketBlockedOnNetworkNanosAvgTime:float}, SendDataPacketTransferNanosNumOps=%{NUMBER:SendDataPacketTransferNanosNumOps:float}, SendDataPacketTransferNanosAvgTime=%{NUMBER:SendDataPacketTransferNanosAvgTime:float}"]

            #rpc.rpc
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

            #rpc.rpc(bis)
            match=>["message", "\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}, ReceivedBytes=%{NUMBER:ReceivedBytes:float}, SentBytes=%{NUMBER:SentBytes:float}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps:float}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime:float}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps:float}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime:float}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures:float}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses:float}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures:float}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses:float}, RpcClientBackoff=%{NUMBER:RpcClientBackoff:float}, NumOpenConnections=%{NUMBER:NumOpenConnections:float}, CallQueueLength=%{NUMBER:CallQueueLength:float}"]

            #rpcdetailed.rpcdetailed
            match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port:int}, Context=%{WORD:context}, Hostname=%{HOSTNAME:hostname}"]
        }
    }

    if [type] == "l_test2"{
        metrics{
            timer => ["events2","%{duration}"]
            add_tag => "metric2"
        }
    }
}

output {

   if "metric" in [tags]{
        stdout{codec => line {format => "Metric1: 1m rate: %{[events][rate_1m]}-> 5m rate: %{[events][rate_5m]}-> 15m rate: %{[events][rate_15m]}-> count: (%{[events][count]})"}}
   }

   if "metric2" in [tags]{
        stdout{codec => line {format => "Metric2: 1m rate: %{[events2][rate_1m]}-> 5m rate: %{[events2][rate_5m]}-> 15m rate: %{[events2][rate_15m]}-> count:  (%{[events2][count]})"}}
   }

    file {
        path => "/tmp/parse.out"
   }
}